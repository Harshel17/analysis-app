"""Fix Float import

Revision ID: ccd31b47e522
Revises: 0e241ab120d9
Create Date: 2025-03-20 15:21:06.914551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ccd31b47e522'
down_revision: Union[str, None] = '0e241ab120d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.add_column('analysis_parameters', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('analysis_parameters', sa.Column('description', sa.String(), nullable=True))
    op.add_column('analysis_parameters', sa.Column('principal', sa.Float(), nullable=False))
    op.add_column('analysis_parameters', sa.Column('interest_week', sa.Float(), nullable=False))
    op.add_column('analysis_parameters', sa.Column('additional_deposit', sa.Float(), nullable=True))
    op.add_column('analysis_parameters', sa.Column('deposit_frequency', sa.Integer(), nullable=True))
    op.add_column('analysis_parameters', sa.Column('regular_withdrawal', sa.Float(), nullable=True))
    op.add_column('analysis_parameters', sa.Column('withdrawal_frequency', sa.Integer(), nullable=True))
    op.add_column('analysis_parameters', sa.Column('projection_period', sa.Integer(), nullable=False))
    op.add_column('analysis_parameters', sa.Column('tax_rate', sa.Float(), nullable=True))
    op.alter_column('analysis_parameters', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_analysis_parameters_analysis_id', table_name='analysis_parameters')
    op.create_index(op.f('ix_analysis_parameters_id'), 'analysis_parameters', ['id'], unique=False)
    op.create_foreign_key(None, 'analysis_parameters', 'users', ['user_id'], ['id'])
    op.drop_column('analysis_parameters', 'analysis_id')
    op.drop_column('analysis_parameters', 'parameter_2')
    op.drop_column('analysis_parameters', 'parameter_1')
    op.drop_column('analysis_parameters', 'created_at')
    op.add_column('analysis_results', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('analysis_results', sa.Column('week', sa.Integer(), nullable=False))
    op.add_column('analysis_results', sa.Column('beginning_balance', sa.Float(), nullable=False))
    op.add_column('analysis_results', sa.Column('additional_deposit', sa.Float(), nullable=True))
    op.add_column('analysis_results', sa.Column('interest', sa.Float(), nullable=False))
    op.add_column('analysis_results', sa.Column('profit', sa.Float(), nullable=False))
    op.add_column('analysis_results', sa.Column('withdrawal', sa.Float(), nullable=True))
    op.add_column('analysis_results', sa.Column('tax_deduction', sa.Float(), nullable=True))
    op.add_column('analysis_results', sa.Column('ending_balance', sa.Float(), nullable=False))
    op.alter_column('analysis_results', 'generated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('ix_analysis_results_result_id', table_name='analysis_results')
    op.create_index(op.f('ix_analysis_results_id'), 'analysis_results', ['id'], unique=False)
    op.drop_constraint('analysis_results_analysis_id_fkey', 'analysis_results', type_='foreignkey')
    op.create_foreign_key(None, 'analysis_results', 'analysis_parameters', ['analysis_id'], ['id'])
    op.drop_column('analysis_results', 'result_1')
    op.drop_column('analysis_results', 'result_2')
    op.drop_column('analysis_results', 'result_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('analysis_results', sa.Column('result_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('analysis_results', sa.Column('result_2', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('analysis_results', sa.Column('result_1', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.create_foreign_key('analysis_results_analysis_id_fkey', 'analysis_results', 'analysis_parameters', ['analysis_id'], ['analysis_id'])
    op.drop_index(op.f('ix_analysis_results_id'), table_name='analysis_results')
    op.create_index('ix_analysis_results_result_id', 'analysis_results', ['result_id'], unique=False)
    op.alter_column('analysis_results', 'generated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('analysis_results', 'ending_balance')
    op.drop_column('analysis_results', 'tax_deduction')
    op.drop_column('analysis_results', 'withdrawal')
    op.drop_column('analysis_results', 'profit')
    op.drop_column('analysis_results', 'interest')
    op.drop_column('analysis_results', 'additional_deposit')
    op.drop_column('analysis_results', 'beginning_balance')
    op.drop_column('analysis_results', 'week')
    op.drop_column('analysis_results', 'id')
    op.add_column('analysis_parameters', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('analysis_parameters', sa.Column('parameter_1', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('analysis_parameters', sa.Column('parameter_2', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('analysis_parameters', sa.Column('analysis_id', sa.INTEGER(), server_default=sa.text("nextval('analysis_parameters_analysis_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'analysis_parameters', type_='foreignkey')
    op.drop_index(op.f('ix_analysis_parameters_id'), table_name='analysis_parameters')
    op.create_index('ix_analysis_parameters_analysis_id', 'analysis_parameters', ['analysis_id'], unique=False)
    op.alter_column('analysis_parameters', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('analysis_parameters', 'tax_rate')
    op.drop_column('analysis_parameters', 'projection_period')
    op.drop_column('analysis_parameters', 'withdrawal_frequency')
    op.drop_column('analysis_parameters', 'regular_withdrawal')
    op.drop_column('analysis_parameters', 'deposit_frequency')
    op.drop_column('analysis_parameters', 'additional_deposit')
    op.drop_column('analysis_parameters', 'interest_week')
    op.drop_column('analysis_parameters', 'principal')
    op.drop_column('analysis_parameters', 'description')
    op.drop_column('analysis_parameters', 'id')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
